\section{线性表}

\begin{frame}
线性表是一种典型的线性结构，其基本特点是线性表中的数据元素是有序且有限的。在这种结构中，
\begin{itemize}
\item
存在唯一的首元；
\item
存在唯一的末元；
\item
除首元外，每个元素均有唯一的直接前驱；
\item
除末元外，每个元素均有唯一的直接后继。
\end{itemize}•

\end{frame}


\subsection{线性表的逻辑结构}
\begin{frame}\ft{\secname}
\begin{dingyi}[线性表]
由$n(n\ge0)$个数据元素（结点）$a_1,a_2,\cd,a_n$组成的有限序列。

\begin{itemize}
\item 所有结点有相同的数据类型;
\item 数据元素的个数$n$称为线性表的长度。
\end{itemize}
\end{dingyi}

\pause 
\begin{itemize}
\item[1] 当$n=0$时，为空表；\\[0.1in]
\item[2] 当$n>0$时，为非空的线性表，记为$(a_1,a_2,\cd,a_n)$。\\[0.1in]
\item[$\diamond$]
$a_1$称为线性表的首结点，$a_n$称为线性表的尾结点。 
\item[$\diamond$]
$a_1,a_2,\cd,a_{i-1}$都是$a_i%(2\le i \le n)
$的前驱，其中$a_{i-1}$是$a_i$的直接前驱。
\item[$\diamond$]
$a_{i+1},a_{i+2},\cd,a_{n}$都是$a_i%(1\le i \le n-1)
$的后继，其中$a_{i+1}$是$a_i$的直接后继。
\end{itemize}•
\end{frame}

\begin{frame}\ft{线性表的逻辑结构}
%线性表中的数据元素$a_i$所代表的具体含义随具体应用的不同而不同，
%只不过是一个抽象的表示符号。
\begin{itemize}
\item%[$\spadesuit$]
结点可以是单值元素%（每个元素只有一个数据项）
\end{itemize}

\begin{li}
26个英文字母组成的字母表：(A,~B,~C,~$\cd$,~Z)
\end{li}	

\begin{li}
一副扑克的点数：(2,~3,~4,~$\cd$,~J,~Q,~K,~A)
\end{li}	

\end{frame}

\begin{frame}\ft{线性表的逻辑结构}
\begin{itemize}
\item%[$\spadesuit$]
结点可以是记录型元素。每个元素含多个数据项，每项称为结点的一个域。
每个元素有一个可以唯一标识每个结点的数据项，称为\red{关键字}。
\end{itemize}

\begin{exampleblock}{例3}
某校2014级同学的基本情况：
$$
\begin{array}{ccc}
\{&\mbox{('20140212001','张三','男',06/24/1992)}&,\\[0.1cm]
&\mbox{('20140212002','李四','男',07/20/1992)}&,\\[0.1cm]
&\cd&\\[0.1cm]
&\mbox{('20140212090','王五','男',04/05/1992)}&\}
\end{array} 
$$
\end{exampleblock}	

\end{frame}

\begin{frame}\ft{线性表的逻辑结构}
\begin{itemize}
\item%[$\spadesuit$]
若线性表中的结点是按值（或关键字值）从小到大（或从大到小）排列的，
称线性表是\red{有序}的。\\[0.2in]
\item%[$\spadesuit$]
线性表是一种相当灵活的数据结构，其长度可根据需要增长或缩短。\\[0.2in]
\item%[$\spadesuit$]
可对线性表的数据元素进行访问、插入和删除操作。
\end{itemize}

\end{frame}


\subsection{线性表的抽象数据类型定义}
\begin{frame}[fragile]
\begin{lstlisting}[mathescape=true]
ADT List{
  `数据对象：` $\mathrm D=\{a_i|a_i\in \mathrm{ElemSet},i=1,2,\cd,n,n\ge0\}$
  `数据关系：` $\mathrm R=\{\langle a_{i-1},a_i\rangle|a_{i-1},a_i\in \mathrm D, i=2,3,\cd,n\}$
  `基本操作：`
  InitList(&L)
  `操作结果：构造一个空的线性表L`
  ListLength(L)
  `初始条件：线性表L已存在`
  `操作结果：若L为空表，则返回0，否则返回线性表的长度`
  ...
  GetElem(L,i,&e)
  `初始条件：线性表L已存在,`$1\le i \le \mathrm{ListLength(L)}$
  `操作结果：用e返回L中第i个数据元素的值`
  ListInsert(L,i,&e)
  `初始条件：线性表L已存在,`$1\le i \le \mathrm{ListLength(L)}$
  `操作结果：在线性表L中的第i个位置插入元素e`
  ...
} ADT List
\end{lstlisting}
\end{frame}

